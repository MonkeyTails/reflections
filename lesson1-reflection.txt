How did viewing a diff between two versions of a file help you see the bug that was introduced?
It significantly shortened the amount of code I had to look at to see what the problem was.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
By looking back at previous versions one can compare the difference between files in the event where the program is not working correctly.

Note: git diff compares the differences between files

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pro for Git-you can choose when to save, making it more flexible. ~Git-Can save ones work if forgetful. Con for Git-If forgetful, could result in large commits. ~Git-Saves at seemlingly random project instances.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
It probably depends on what the focus is from each company.

How can you use the commands git log and git diff to view the history of files?
View the logs then compare the difference between files.

How might using version control make you more confident to make changes that could break something?
Because in the event that something gets broken I am confident that myself and others can go back and checkout previous versions.

git config --global core.editor "'E:/NotepPad++/notepad++.exe'-n -w"

Now that you have your workspace set up, what do you want to try using Git for?
Well, I'm learning this in order to become a better software develper.

Pappu Recent commit fa4c6bade4970c282b3870ad16f1bde8164663a9